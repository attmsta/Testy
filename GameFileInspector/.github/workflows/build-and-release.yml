name: 🚀 Build and Release APK

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  schedule:
    # Nightly build at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      create_release:
        description: 'Create GitHub release'
        required: false
        default: false
        type: boolean

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true

jobs:
  # Test job
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🎯 Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          GameFileInspector/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('GameFileInspector/**/*.gradle*', 'GameFileInspector/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔧 Make gradlew executable
      run: chmod +x gradlew
      working-directory: ./GameFileInspector
      
    - name: 🧪 Run unit tests
      run: ./gradlew test --stacktrace
      working-directory: ./GameFileInspector
      
    - name: 🔍 Run lint checks
      run: ./gradlew lint --stacktrace
      working-directory: ./GameFileInspector
      
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          GameFileInspector/app/build/reports/
          GameFileInspector/app/build/test-results/
        retention-days: 7

  # Build debug APK
  build-debug:
    name: 🔨 Build Debug APK
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || github.ref != 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🎯 Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          GameFileInspector/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('GameFileInspector/**/*.gradle*', 'GameFileInspector/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔧 Make gradlew executable
      run: chmod +x gradlew
      working-directory: ./GameFileInspector
      
    - name: 🔨 Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      working-directory: ./GameFileInspector
      
    - name: 📊 Get APK info
      id: apk_info
      working-directory: ./GameFileInspector
      run: |
        APK_PATH="app/build/outputs/apk/debug/app-debug.apk"
        if [ -f "$APK_PATH" ]; then
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          APK_SIZE_BYTES=$(stat -c%s "$APK_PATH")
          echo "size=$APK_SIZE" >> $GITHUB_OUTPUT
          echo "size_bytes=$APK_SIZE_BYTES" >> $GITHUB_OUTPUT
          echo "path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "✅ Debug APK built successfully: $APK_SIZE"
        fi
        
    - name: 📤 Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: GameFileInspector/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 7

  # Build release APK
  build-release:
    name: 🚀 Build Release APK
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || github.event.inputs.release_type == 'release'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 📱 Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🎯 Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          GameFileInspector/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('GameFileInspector/**/*.gradle*', 'GameFileInspector/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🔧 Make gradlew executable
      run: chmod +x gradlew
      working-directory: ./GameFileInspector
      
    - name: 🚀 Build release APK
      run: ./gradlew assembleRelease --stacktrace
      working-directory: ./GameFileInspector
      
    - name: 📊 Get APK info
      id: apk_info
      working-directory: ./GameFileInspector
      run: |
        APK_PATH="app/build/outputs/apk/release/app-release-unsigned.apk"
        if [ -f "$APK_PATH" ]; then
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          APK_SIZE_BYTES=$(stat -c%s "$APK_PATH")
          APK_SIZE_MB=$((APK_SIZE_BYTES / 1024 / 1024))
          echo "size=$APK_SIZE" >> $GITHUB_OUTPUT
          echo "size_bytes=$APK_SIZE_BYTES" >> $GITHUB_OUTPUT
          echo "size_mb=$APK_SIZE_MB" >> $GITHUB_OUTPUT
          echo "path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "✅ Release APK built successfully: $APK_SIZE"
          
          # Rename APK for release
          cp "$APK_PATH" "GameFileInspector-v${{ github.sha }}.apk"
          echo "release_apk=GameFileInspector-v${{ github.sha }}.apk" >> $GITHUB_OUTPUT
        fi
        
    - name: 📤 Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: |
          GameFileInspector/app/build/outputs/apk/release/app-release-unsigned.apk
          GameFileInspector/GameFileInspector-v${{ github.sha }}.apk
        retention-days: 30

  # Create GitHub release
  create-release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    needs: [build-release]
    if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) && (github.event.inputs.create_release == 'true' || github.event_name == 'push')
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download release APK
      uses: actions/download-artifact@v4
      with:
        name: release-apk
        path: ./apk/
        
    - name: 📊 Get release info
      id: release_info
      run: |
        APK_PATH="./apk/app-release-unsigned.apk"
        if [ -f "$APK_PATH" ]; then
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "apk_size=$APK_SIZE" >> $GITHUB_OUTPUT
        fi
        
        # Generate version tag
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION="${{ github.ref_name }}"
        else
          VERSION="v$(date +'%Y.%m.%d')-${{ github.sha }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: 📝 Generate release notes
      run: |
        cat > release_notes.md << 'EOF'
        ## 🎮 Game File Inspector Release
        
        ### ✨ Features
        - 🔓 **Rootless Operation**: Works without root permissions
        - 📁 **Multi-Format Support**: JSON, XML, Properties, Binary, SQLite
        - 🧠 **AI-Powered Detection**: Advanced game value recognition
        - 🛡️ **Safe Modifications**: Automatic backup and restore system
        - 🔧 **Advanced Tools**: Hex editor, file comparison, pattern recognition
        - 🎓 **Demo Mode**: Interactive tutorial for new users
        - 📤 **Export/Import**: Share modification profiles
        
        ### 📱 APK Information
        - **Size**: ${{ steps.release_info.outputs.apk_size }}
        - **Target SDK**: Android 14 (API 34)
        - **Minimum SDK**: Android 7.0 (API 24)
        - **Architecture**: Universal (ARM64, ARM32, x86_64)
        - **Permissions**: Storage access only (no root required)
        
        ### 📥 Installation Instructions
        1. **Download** the APK file below
        2. **Enable** "Install from Unknown Sources" in Android settings
        3. **Install** the downloaded APK file
        4. **Grant** storage permissions when prompted
        5. **Start** analyzing your game files!
        
        ### ⚠️ Important Disclaimers
        - Always backup your game data before making modifications
        - Use at your own risk - we are not responsible for data loss
        - Some games may detect file modifications
        - Respect game developers and terms of service
        
        ---
        **Build Info:** Commit `${{ github.sha }}` | Built $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        EOF
        
    - name: 📦 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_info.outputs.version }}
        name: "Game File Inspector ${{ steps.release_info.outputs.version }}"
        body_path: release_notes.md
        files: |
          ./apk/app-release-unsigned.apk
          ./apk/GameFileInspector-v${{ github.sha }}.apk
        draft: false
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}